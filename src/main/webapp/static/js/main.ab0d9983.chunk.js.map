{"version":3,"sources":["logo.svg","TestTicTocToe.js","serviceWorker.js","BackgroungGrid.js","components/UserForm.js","components/Header/FormUserDetail.js","components/Footer/Footer.js","components/ContentTable.js","components/TestCollapseTable.js","components/NewTable.js","components/SearchBar.js","components/TestNewTable.js","components/WelcomeSection/WelcomePage.js","Post/PostList.js","index.js"],"names":["module","exports","Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","calculateWinner","lines","length","a","b","c","Boolean","window","location","hostname","match","makeStyles","theme","grid","width","margin","paper","padding","spacing","color","palette","text","secondary","background","success","light","GridApp","Component","FormUserDetail","position","alert","onClickEvent","useStyles","root","flexGrow","marginTop","backgroundColor","main","borderTop","subFooter","height","Footer","classes","Grid","container","item","xs","sm","obj","JSON","stringify","data","jsonObject","parse","name","venteliste","homepage","InklussionOgFællesskab","SocialeRelationer","Forældresamarbejde","SammenhængOgOvergange","KravOmReflektion","rowsh","console","log","periodiskTilsyn","foerste","indsats","Sprogindsatsen","push","createDataArray","maxHeight","borderBottom","createData","calories","fat","carbs","protein","price","history","date","customerId","amount","BasicTextFields","noValidate","autoComplete","TextField","id","label","variant","onChange","event","target","useRowStyles","Row","row","useState","open","setOpen","anbefaling","setAnbefaling","begrundelse","setBegrundelse","openFane","setopenFane","institutionToInspect","setinstitutionToInspect","onClickRandomButton","fane","institution","Fragment","TableRow","component","scope","IconButton","aria-label","size","align","tilsyn","inklussionOgFællesskab","socialeRelationer","forældresamarbejde","sammenhængeOgOvergange","kravOmReflektion","style","paddingBottom","paddingTop","colSpan","in","timeout","unmountOnExit","Box","Typography","gutterBottom","Table","TableHead","TableBody","NewTable","TableContainer","Paper","filter","toLowerCase","indexOf","searchword","map","key","WelcomePage","updateSearchWord","newWord","setState","searchWord","state","fetch","then","response","json","leftNRightGrid","centerGrid","SearchBar","withStyles","alignItems","textAlign","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ab0d9983.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import * as React from \"react\";\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button className=\"square\" onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n    renderSquare(i) {\r\n        return (\r\n            <Square\r\n                value={this.props.squares[i]}\r\n                onClick={() => this.props.onClick(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [\r\n                {\r\n                    squares: Array(9).fill(null)\r\n                }\r\n            ],\r\n            stepNumber: 0,\r\n            xIsNext: true\r\n        };\r\n    }\r\n\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n        this.setState({\r\n            history: history.concat([\r\n                {\r\n                    squares: squares\r\n                }\r\n            ]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext\r\n        });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ?\r\n                'Go to move #' + move :\r\n                'Go to game start';\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        let status;\r\n        if (winner) {\r\n            status = \"Winner: \" + winner;\r\n        } else {\r\n            status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n        }\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board\r\n                        squares={current.squares}\r\n                        onClick={i => this.handleClick(i)}\r\n                    />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <ol>{moves}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport { makeStyles} from \"@material-ui/core/styles\";\r\nimport { Grid, Paper, Button , Typography, Container, Card} from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grid:{\r\n        width: '100px',\r\n        margin: '0px'\r\n    },\r\n    paper:{\r\n        padding: theme.spacing(2),\r\n        color: theme.palette.text.secondary,\r\n        background: theme.palette.success.light,\r\n    }\r\n\r\n}));\r\n\r\nfunction GridApp({value}) {\r\n\r\n    const classes = useStyles;\r\n    return (\r\n        <Grid container spacing={2} className={classes.grid}>\r\n            <Grid item xs={12} md={6}>\r\n                <Container>\r\n                    <Typography variant=\"h3\" gutterBottom>\r\n                        Here gores the button\r\n                    </Typography>\r\n                    <Button color=\"primary\" variant=\"contained\">{value}</Button>\r\n                </Container>\r\n\r\n                <Paper className={classes.paper}>1</Paper>\r\n            </Grid>\r\n            <Grid item xs={7} md={6}>\r\n                <Button color=\"secondary\" variant=\"outlined\" >I'm a button</Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n\r\n}\r\n\r\nexport default GridApp;","import React from 'react'\r\n\r\n\r\nclass UserForm extends React.Component {\r\n    state= {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n    }\r\n\r\n\r\n    //Handle field change\r\n    //\"e\" is the event parameter\r\n    handleChange = input => e => {\r\n        this.setState({[input]: e.target.value})\r\n    }\r\n\r\n    render() {\r\n        const {firstName , email, lastName} = this.state;\r\n        const values = {firstName, lastName, email};\r\n        return (\r\n            <div>\r\n                <h1>Venligst indsæt dit navn, efternavn og email</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserForm;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar/index';\r\nimport TextField from '@material-ui/core/TextField/index';\r\nimport Button from '@material-ui/core/Button/index';\r\nimport Typography from '@material-ui/core/Typography/index';\r\nimport IconButton from \"@material-ui/core/IconButton/index\";\r\n\r\nimport Toolbar from \"@material-ui/core/Toolbar/index\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\n\r\n\r\nconst onClickEvent=(props)=>{\r\n    alert(props)\r\n}\r\n\r\n\r\n function FormUserDetail(props){\r\n     return(\r\n             (<div>\r\n                 <AppBar position=\"static\">\r\n                     <Toolbar>\r\n                         <Button onClick={()=>onClickEvent('Login')} color=\"inherit\">Login</Button>\r\n                         <Button color=\"inherit\">Søg institution</Button>\r\n                         <Button color=\"inherit\">Skriv et opslag</Button>\r\n                     </Toolbar>\r\n                 </AppBar>\r\n                 </div>\r\n             )\r\n     )\r\n\r\n\r\n };\r\n\r\n export default FormUserDetail;\r\n\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        marginTop:30,\r\n        backgroundColor: theme.palette.success.main,\r\n        borderTop: 'solid 3px #999943',\r\n    },\r\n    subFooter: {\r\n      backgroundColor: theme.palette.success.light,\r\n        height:'10px',\r\n    },\r\n}));\r\n\r\n\r\n\r\nfunction Footer(){\r\n\r\nconst classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n                <Grid container spacing={24}>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <h1>fdsfsdf</h1>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <h1>fdsfsdf</h1>\r\n                    </Grid>\r\n                    <Grid className={classes.subFooter}  item xs={12}>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Data from '../data';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nvar obj = JSON.stringify({data:[\r\n    {\r\n        \"name\":\"7Springeren\",\r\n        \"venteliste\":23,\r\n        \"homepage\":\"http://amagerhus.kbhbarn.kk.dk/FrontEnd.aspx?id=19484622\",\r\n        \"periodiskTilsyn\":\r\n            {\r\n                \"foerste\":\r\n                    {\r\n                        \"InklussionOgFællesskab\":\r\n                            {\r\n                                \"indsats\":\"Tilpasning Af Indsats\",\r\n                                \"begrundelse\":\"ASLKdnas Asmdælamsldmwqa asældmasæmdæasm asdmasælmælamsdæm sadmaælsmdæasmdæ saædmælasmdælas\",\r\n                                \"anbefaling\":\"Dette er anbefalingen\"\r\n                            }\r\n                        ,\r\n                        \"SocialeRelationer\":\r\n                            {\r\n                                \"indsats\":\"Tilpasning Af Indsats\",\r\n                                \"begrundelse\":\"ASLKdnas Asmdælamsldmwqa asældmasæmdæasm asdmasælmælamsdæm sadmaælsmdæasmdæ saædmælasmdælas\",\r\n                                \"anbefaling\":\"Dette er anbefalingen\"\r\n                            },\r\n                        \"Sprogindsatsen\":\r\n                            {\r\n                                \"indsats\":\"Tilpasning Af Indsats\",\r\n                                \"begrundelse\":\"ASLKdnas Asmdælamsldmwqa asældmasæmdæasm asdmasælmælamsdæm sadmaælsmdæasmdæ saædmælasmdælas\",\r\n                                \"anbefaling\":\"Dette er anbefalingen\"\r\n                            }\r\n                        ,\r\n                        \"Forældresamarbejde\":\r\n                            {\r\n                                \"indsats\":\"Tilpasning Af Indsats\",\r\n                                \"begrundelse\":\"ASLKdnas Asmdælamsldmwqa asældmasæmdæasm asdmasælmælamsdæm sadmaælsmdæasmdæ saædmælasmdælas\",\r\n                                \"anbefaling\":\"Dette er anbefalingen\"\r\n                            }\r\n                        ,\r\n                        \"SammenhængOgOvergange\":\r\n                            {\r\n                                \"indsats\":\"Tilpasning Af Indsats\",\r\n                                \"begrundelse\":\"ASLKdnas Asmdælamsldmwqa asældmasæmdæasm asdmasælmælamsdæm sadmaælsmdæasmdæ saædmælasmdælas\",\r\n                                \"anbefaling\":\"Dette er anbefalingen\"\r\n                            }\r\n                        ,\r\n                        \"KravOmReflektion\":\r\n                            {\r\n                                \"indsats\":\"vedligeholdelse Af Indsats\",\r\n                                \"begrundelse\":\"ASLKdnas Asmdælamsldmwqa asældmasæmdæasm asdmasælmælamsdæm sadmaælsmdæasmdæ saædmælasmdælas\",\r\n                                \"anbefaling\":\"Dette er anbefalingen\"\r\n                            }\r\n\r\n                    }\r\n\r\n            }\r\n\r\n    },\r\n    {\r\n        \"name\":\"Klaphatten\",\r\n        \"venteliste\":23,\r\n        \"homepage\":\"http://amagerhus.kbhbarn.kk.dk/FrontEnd.aspx?id=19484622\",\r\n        \"periodiskTilsyn\":\r\n            {\r\n                \"foerste\":\r\n                    {\r\n                        \"InklussionOgFællesskab\":\r\n                            {\r\n                                \"indsats\":\"Tilpasning Af Indsats\",\r\n                                \"begrundelse\":\"ASLKdnas Asmdælamsldmwqa asældmasæmdæasm asdmasælmælamsdæm sadmaælsmdæasmdæ saædmælasmdælas\",\r\n                                \"anbefaling\":\"Dette er anbefalingen\"\r\n                            }\r\n                        ,\r\n                        \"SocialeRelationer\":\r\n                            {\r\n                                \"indsats\":\"Tilpasning Af Indsats\",\r\n                                \"begrundelse\":\"ASLKdnas Asmdælamsldmwqa asældmasæmdæasm asdmasælmælamsdæm sadmaælsmdæasmdæ saædmælasmdælas\",\r\n                                \"anbefaling\":\"Dette er anbefalingen\"\r\n                            }\r\n                        ,\r\n                        \"Sprogindsatsen\":\r\n                            {\r\n                                \"indsats\":\"Tilpasning Af Indsats\",\r\n                                \"begrundelse\":\"ASLKdnas Asmdælamsldmwqa asældmasæmdæasm asdmasælmælamsdæm sadmaælsmdæasmdæ saædmælasmdælas\",\r\n                                \"anbefaling\":\"Dette er anbefalingen\"\r\n                            }\r\n                        ,\r\n                        \"Forældresamarbejde\":\r\n                            {\r\n                                \"indsats\":\"Tilpasning Af Indsats\",\r\n                                \"begrundelse\":\"ASLKdnas Asmdælamsldmwqa asældmasæmdæasm asdmasælmælamsdæm sadmaælsmdæasmdæ saædmælasmdælas\",\r\n                                \"anbefaling\":\"Dette er anbefalingen\"\r\n                            }\r\n                        ,\r\n                        \"SammenhængOgOvergange\":\r\n                            {\r\n                                \"indsats\":\"Tilpasning Af Indsats\",\r\n                                \"begrundelse\":\"ASLKdnas Asmdælamsldmwqa asældmasæmdæasm asdmasælmælamsdæm sadmaælsmdæasmdæ saædmælasmdælas\",\r\n                                \"anbefaling\":\"Dette er anbefalingen\"\r\n                            }\r\n                        ,\r\n                        \"KravOmReflektion\":\r\n                            {\r\n                                \"indsats\":\"vedligeholdelse Af Indsats\",\r\n                                \"begrundelse\":\"ASLKdnas Asmdælamsldmwqa asældmasæmdæasm asdmasælmælamsdæm sadmaælsmdæasmdæ saædmælasmdælas\",\r\n                                \"anbefaling\":\"Dette er anbefalingen\"\r\n                            }\r\n\r\n                    }\r\n\r\n            }\r\n\r\n    }\r\n]\r\n});\r\n\r\nconst jsonObject = JSON.parse(obj);\r\n\r\n\r\n\r\nconst columns = [\r\n    { id: 'name', label: 'Name', minWidth: 170 },\r\n    { id: 'venteliste', label: 'venteliste', minWidth: 100 },\r\n    {\r\n        id: 'homepage',\r\n        label: 'homepage',\r\n        minWidth: 170,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: 'InklussionOgFællesskab',\r\n        label: 'InklussionOgFællesskab',\r\n        minWidth: 170,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: 'SocialeRelationer',\r\n        label: 'SocialeRelationer',\r\n        minWidth: 170,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: 'Forældresamarbejde',\r\n        label: 'Forældresamarbejde',\r\n        minWidth: 170,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: 'SammenhængOgOvergange',\r\n        label: 'SammenhængOgOvergange',\r\n        minWidth: 170,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: 'KravOmReflektion',\r\n        label: 'KravOmReflektion',\r\n        minWidth: 170,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n];\r\n\r\nfunction createData(name, venteliste, homepage, InklussionOgFællesskab,SocialeRelationer,Forældresamarbejde,SammenhængOgOvergange,KravOmReflektion) {\r\n    return { name, venteliste, homepage, InklussionOgFællesskab,SocialeRelationer,Forældresamarbejde,SammenhængOgOvergange,KravOmReflektion};\r\n}\r\n\r\nfunction createDataArray(jsonObject){\r\n    const rowsh = [];\r\n    for (var i = 0; i < jsonObject.data.length; i++) {\r\n        var obj = jsonObject.data[i];\r\n\r\n        console.log(obj.name);\r\n        var data = createData(obj.name, obj.venteliste, obj.homepage,\r\n            obj.periodiskTilsyn.foerste.InklussionOgFællesskab.indsats,\r\n            obj.periodiskTilsyn.foerste.Forældresamarbejde.indsats,\r\n            obj.periodiskTilsyn.foerste.KravOmReflektion.indsats,\r\n            obj.periodiskTilsyn.foerste.SocialeRelationer.indsats,\r\n            obj.periodiskTilsyn.foerste.Sprogindsatsen.indsats);\r\n\r\n        rowsh.push(data);\r\n    }\r\n    return rowsh;\r\n}\r\n\r\nconst rows = createDataArray(jsonObject);\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        maxHeight: '100%',\r\n    },\r\n});\r\n\r\nexport const testFunction = () => {\r\n    return (\r\n        <TableCell>sdasdasd</TableCell>\r\n    )\r\n};\r\n\r\nfunction handleEventFolder(){\r\n    testFunction();\r\n\r\n}\r\n\r\n\r\nexport default function StickyHeadTable() {\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(100);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <TableContainer className={classes.container}>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {columns.map((column) => (\r\n                                <TableCell\r\n                                    key={column.id}\r\n                                    align={column.align}\r\n                                    style={{ minWidth: column.minWidth }}\r\n                                >\r\n                                    {column.label}\r\n                                </TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                   <TableBody>\r\n                        {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                            return (\r\n                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.name}>\r\n                                    {columns.map((column) => {\r\n                                        const value = row[column.id];\r\n                                        return (\r\n                                            <TableCell key={column.id} align={column.align}>\r\n                                                <div>\r\n                                                    {column.id===\"InklussionOgFællesskab\"\r\n                                                    || column.id===\"SocialeRelationer\"\r\n                                                    ||column.id===\"Forældresamarbejde\" ||\r\n                                                    column.id===\"SammenhængOgOvergange\" ||\r\n                                                    column.id===\"KravOmReflektion\" ?<Button onClick={handleEventFolder}>{value}</Button>:column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                                </div>\r\n\r\n                                            </TableCell>\r\n                                        );\r\n                                    })}\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[100, 25, 100]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n        </Paper>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n        '& > *': {\r\n            borderBottom: 'unset',\r\n        },\r\n    },\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein, price) {\r\n    return {\r\n        name,\r\n        calories,\r\n        fat,\r\n        carbs,\r\n        protein,\r\n        price,\r\n        history: [\r\n            { date: '2020-01-05', customerId: '11091700', amount: 3 },\r\n            { date: '2020-01-02', customerId: 'Anonymous', amount: 1 },\r\n        ],\r\n    };\r\n}\r\n\r\nfunction Row(props) {\r\n    const { row } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useRowStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableRow className={classes.root}>\r\n                <TableCell>\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n                        {open ? null : null}\r\n                    </IconButton>\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                    {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.calories}</TableCell>\r\n                <TableCell align=\"right\">{row.fat}</TableCell>\r\n                <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                <TableCell align=\"right\">{row.protein}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                        <Box margin={1}>\r\n                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                History\r\n                            </Typography>\r\n                            <Table size=\"small\" aria-label=\"purchases\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>Date</TableCell>\r\n                                        <TableCell>Customer</TableCell>\r\n                                        <TableCell align=\"right\">Amount</TableCell>\r\n                                        <TableCell align=\"right\">Total price ($)</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {row.history.map((historyRow) => (\r\n                                        <TableRow key={historyRow.date}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {historyRow.date}\r\n                                            </TableCell>\r\n                                            <TableCell>{historyRow.customerId}</TableCell>\r\n                                            <TableCell align=\"right\">{historyRow.amount}</TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                {Math.round(historyRow.amount * row.price * 100) / 100}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Box>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nRow.propTypes = {\r\n    row: PropTypes.shape({\r\n        calories: PropTypes.number.isRequired,\r\n        carbs: PropTypes.number.isRequired,\r\n        fat: PropTypes.number.isRequired,\r\n        history: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                amount: PropTypes.number.isRequired,\r\n                customerId: PropTypes.string.isRequired,\r\n                date: PropTypes.string.isRequired,\r\n            }),\r\n        ).isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        price: PropTypes.number.isRequired,\r\n        protein: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n};\r\n\r\nconst rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\r\n    createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5),\r\n];\r\n\r\nexport default function CollapsibleTable() {\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table aria-label=\"collapsible table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell />\r\n                        <TableCell>Dessert (100g serving)</TableCell>\r\n                        <TableCell align=\"right\">Calories</TableCell>\r\n                        <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n                        <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n                        <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.map((row) => (\r\n                        <Row key={row.name} row={row} />\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell/TableCell\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Collapse from \"@material-ui/core/Collapse/Collapse\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Paper from \"@material-ui/core/Paper/Paper\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\nimport PostData from '../data/newData.json'\r\nimport TestPostData from '../data/TestPostData.json'\r\n\r\n\r\n\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n        '& > *': {\r\n            borderBottom: 'unset',\r\n        },\r\n    },\r\n});\r\n\r\n\r\n\r\nconst jsonObject = PostData;\r\nconst testJsonData = TestPostData;\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Row(props) {\r\n    const { row } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useRowStyles();\r\n    const [anbefaling, setAnbefaling] = React.useState([]);\r\n    const [begrundelse, setBegrundelse] = React.useState([]);\r\n    const [openFane, setopenFane] = React.useState([]);\r\n    const [institutionToInspect, setinstitutionToInspect] = React.useState([]);\r\n\r\n\r\n\r\n    const onClickRandomButton = (anbefaling, begrundelse, fane, institution) => {\r\n\r\n        if(!open){\r\n            setAnbefaling(anbefaling);\r\n            setBegrundelse(begrundelse);\r\n            setopenFane(fane);\r\n            setinstitutionToInspect(institution);\r\n            console.log(anbefaling);\r\n            console.log(begrundelse);\r\n        }\r\n        setOpen(!open);\r\n\r\n        console.log(open);\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableRow >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n                        {<p>{row.name}</p>}\r\n                    </IconButton>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n                        {<p>{row.venteliste}</p>}\r\n                    </IconButton>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n\r\n                    <a>{row.homepage}</a>\r\n\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => onClickRandomButton(row.periodiskTilsyn.foerste.InklussionOgFællesskab.anbefaling,row.periodiskTilsyn.foerste.InklussionOgFællesskab.begrundelse,\"InklussionOgFællesskab\",row.name)}>\r\n                        {<p>{row.periodiskTilsyn.foerste.InklussionOgFællesskab.indsats}</p>}\r\n                    </IconButton>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => onClickRandomButton(row.periodiskTilsyn.foerste.SocialeRelationer.anbefaling,row.periodiskTilsyn.foerste.SocialeRelationer.begrundelse,\"SocialeRelationer\",row.name)}>\r\n                        {<p>{row.periodiskTilsyn.foerste.SocialeRelationer.indsats}</p>}\r\n                    </IconButton>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => onClickRandomButton(row.periodiskTilsyn.foerste.Forældresamarbejde.anbefaling,row.periodiskTilsyn.foerste.Forældresamarbejde.begrundelse,\"Forældresamarbejde\",row.name)}>\r\n                        {<p>{row.periodiskTilsyn.foerste.Forældresamarbejde.indsats}</p>}\r\n                    </IconButton>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => onClickRandomButton(row.periodiskTilsyn.foerste.SammenhængOgOvergange.anbefaling,row.periodiskTilsyn.foerste.SammenhængOgOvergange.begrundelse,\"SammenhængOgOvergange\" ,row.name)}>\r\n                        { <p>{row.periodiskTilsyn.foerste.SammenhængOgOvergange.indsats}</p>}\r\n                    </IconButton>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => onClickRandomButton(row.periodiskTilsyn.foerste.KravOmReflektion.anbefaling,row.periodiskTilsyn.foerste.KravOmReflektion.begrundelse,\"KravOmReflektion\",row.name)}>\r\n                        <p>{row.periodiskTilsyn.foerste.KravOmReflektion.indsats}</p>\r\n                    </IconButton>\r\n                </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={12} align=\"center\">\r\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                        <Box margin={1}>\r\n                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                {institutionToInspect}\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                {openFane}\r\n                            </Typography>\r\n                            <Table size=\"small\" aria-label=\"purchases\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>Anbefaling</TableCell>\r\n                                        <TableCell>Begrundelse</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n\r\n                                    <TableRow>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {anbefaling}\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            {begrundelse}\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Box>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nRow.propTypes = {\r\n    row: PropTypes.shape({\r\n        calories: PropTypes.number.isRequired,\r\n        carbs: PropTypes.number.isRequired,\r\n        fat: PropTypes.number.isRequired,\r\n        history: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                amount: PropTypes.number.isRequired,\r\n                customerId: PropTypes.string.isRequired,\r\n                date: PropTypes.string.isRequired,\r\n            }),\r\n        ).isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        price: PropTypes.number.isRequired,\r\n        protein: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n};\r\n\r\n\r\n\r\n\r\nexport default function NewTable(props) {\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table aria-label=\"collapsible table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell><h2>Navn</h2></TableCell>\r\n                        <TableCell align=\"center\"><h2>Venteliste</h2></TableCell>\r\n                        <TableCell align=\"center\"><h2>Hjemmeside</h2></TableCell>\r\n                        <TableCell align=\"center\"><h2>Inklussion Og Fællesskab</h2></TableCell>\r\n                        <TableCell align=\"center\"><h2>Sociale Relationer</h2></TableCell>\r\n                        <TableCell align=\"center\"><h2>Forældresamarbejde</h2></TableCell>\r\n                        <TableCell align=\"center\"><h2>Sammenhæng Og Overgange</h2></TableCell>\r\n                        <TableCell align=\"center\"><h2>Krav Om Reflektion</h2></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {jsonObject.payload.filter(name =>{\r\n                        return name.name.toLowerCase().indexOf(props.searchword.toLowerCase()) >=0;\r\n\r\n                    }).map((row) => (\r\n                        <Row key={row.name} row={row} />\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nfunction BasicTextFields(props) {\r\n    const classes = useStyles();\r\nconsole.log(props);\r\n\r\n    return (\r\n        <form className={classes.root} noValidate autoComplete=\"off\" >\r\n            <TextField id=\"outlined-basic\" label=\"Søg institution\" variant=\"outlined\" onChange={(event) => props.onChange(event.target.value)} />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default BasicTextFields;","import React from 'react'\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell/TableCell\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Collapse from \"@material-ui/core/Collapse/Collapse\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Paper from \"@material-ui/core/Paper/Paper\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\nimport PostData from '../data/newData.json'\r\nimport TestPostData from '../data/TestPostData.json'\r\n\r\n\r\n\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n        '& > *': {\r\n            borderBottom: 'unset',\r\n        },\r\n    },\r\n});\r\n\r\n\r\n\r\nconst jsonObject = PostData;\r\nconst testJsonData = TestPostData;\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Row(props) {\r\n    const { row } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useRowStyles();\r\n    const [anbefaling, setAnbefaling] = React.useState([]);\r\n    const [begrundelse, setBegrundelse] = React.useState([]);\r\n    const [openFane, setopenFane] = React.useState([]);\r\n    const [institutionToInspect, setinstitutionToInspect] = React.useState([]);\r\n\r\n\r\n\r\n    const onClickRandomButton = (anbefaling, begrundelse, fane, institution) => {\r\n\r\n        if(!open){\r\n            setAnbefaling(anbefaling);\r\n            setBegrundelse(begrundelse);\r\n            setopenFane(fane);\r\n            setinstitutionToInspect(institution);\r\n            console.log(anbefaling);\r\n            console.log(begrundelse);\r\n        }\r\n        setOpen(!open);\r\n\r\n        console.log(open);\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableRow >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n                        {<p>{row.name}</p>}\r\n                    </IconButton>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n                        {<p>{row.venteliste}</p>}\r\n                    </IconButton>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n\r\n                    <a>{row.homepage}</a>\r\n\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => onClickRandomButton(row.tilsyn.inklussionOgFællesskab.anbefaling,row.tilsyn.inklussionOgFællesskab.begrundelse,\"InklussionOgFællesskab\",row.name)}>\r\n                        {<p>{row.tilsyn.inklussionOgFællesskab.indsats}</p>}\r\n                    </IconButton>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => onClickRandomButton(row.tilsyn.socialeRelationer.anbefaling,row.tilsyn.socialeRelationer.begrundelse,\"SocialeRelationer\",row.name)}>\r\n                        {<p>{row.tilsyn.socialeRelationer.indsats}</p>}\r\n                    </IconButton>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => onClickRandomButton(row.tilsyn.forældresamarbejde.anbefaling,row.tilsyn.forældresamarbejde.begrundelse,\"Forældresamarbejde\",row.name)}>\r\n                        {<p>{row.tilsyn.forældresamarbejde.indsats}</p>}\r\n                    </IconButton>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => onClickRandomButton(row.tilsyn.sammenhængeOgOvergange.anbefaling,row.tilsyn.sammenhængeOgOvergange.begrundelse,\"SammenhængOgOvergange\" ,row.name)}>\r\n                        { <p>{row.tilsyn.sammenhængeOgOvergange.indsats}</p>}\r\n                    </IconButton>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => onClickRandomButton(row.tilsyn.kravOmReflektion.anbefaling,row.tilsyn.kravOmReflektion.begrundelse,\"KravOmReflektion\",row.name)}>\r\n                        <p>{row.tilsyn.kravOmReflektion.indsats}</p>\r\n                    </IconButton>\r\n                </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={12} align=\"center\">\r\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                        <Box margin={1}>\r\n                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                {institutionToInspect}\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                {openFane}\r\n                            </Typography>\r\n                            <Table size=\"small\" aria-label=\"purchases\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>Anbefaling</TableCell>\r\n                                        <TableCell>Begrundelse</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n\r\n                                    <TableRow>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {anbefaling}\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            {begrundelse}\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Box>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nRow.propTypes = {\r\n    row: PropTypes.shape({\r\n        calories: PropTypes.number.isRequired,\r\n        carbs: PropTypes.number.isRequired,\r\n        fat: PropTypes.number.isRequired,\r\n        history: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                amount: PropTypes.number.isRequired,\r\n                customerId: PropTypes.string.isRequired,\r\n                date: PropTypes.string.isRequired,\r\n            }),\r\n        ).isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        price: PropTypes.number.isRequired,\r\n        protein: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n};\r\n\r\n\r\n\r\n\r\nexport default function NewTable(props) {\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table aria-label=\"collapsible table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell><h2>Navn</h2></TableCell>\r\n                        <TableCell align=\"center\"><h2>Venteliste</h2></TableCell>\r\n                        <TableCell align=\"center\"><h2>Hjemmeside</h2></TableCell>\r\n                        <TableCell align=\"center\"><h2>Inklussion Og Fællesskab</h2></TableCell>\r\n                        <TableCell align=\"center\"><h2>Sociale Relationer</h2></TableCell>\r\n                        <TableCell align=\"center\"><h2>Forældresamarbejde</h2></TableCell>\r\n                        <TableCell align=\"center\"><h2>Sammenhæng Og Overgange</h2></TableCell>\r\n                        <TableCell align=\"center\"><h2>Krav Om Reflektion</h2></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {props.data.filter(name =>{\r\n                        return name.name.toLowerCase().indexOf(props.searchword.toLowerCase()) >=0;\r\n\r\n                    }).map((row) => (\r\n                        <Row key={row.name} row={row} />\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}","import React from 'react'\r\nimport Footer from \"../Footer/Footer\";\r\nimport FormUserDetail from \"../Header/FormUserDetail\";\r\nimport GridApp from \"../../BackgroungGrid\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport ContentTable from \"../ContentTable\";\r\nimport TestCollapseTable from \"../TestCollapseTable\";\r\nimport NewTable from \"../NewTable\";\r\nimport SearchBar from \"../SearchBar\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport TestNewTable from \"../TestNewTable\";\r\n\r\n\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        alignItems: 'center',\r\n        textAlign: 'center',\r\n    },\r\n    leftNRightGrid: {\r\n        padding: theme.spacing(2),\r\n        color: theme.palette.text.secondary,\r\n\r\n    },\r\n    centerGrid: {\r\n        padding: theme.spacing(2),\r\n        color: theme.palette.text.secondary,\r\n    }\r\n});\r\n\r\n\r\n\r\nclass WelcomePage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            searchWord:\"\",\r\n            data:[],\r\n        };\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const apiUrl = 'http://localhost:8080/rest/institution';\r\n        fetch(apiUrl)\r\n            .then((response) => response.json())\r\n            .then((data) => this.setState({data:data}));\r\n    }\r\n\r\n/*\r\nThis update searchword is prop in SearchBar component. This is so that that we can pass the searchword to the NewTable component.\r\nThe searchWord is used so that we are able to filter the institution list.\r\n */\r\nupdateSearchWord = newWord =>{\r\n        this.setState({searchWord:newWord});\r\n    console.log(this.state.searchWord);\r\n\r\n}\r\n\r\n\r\nrender(){\r\n    const { classes } = this.props;\r\n        return(\r\n            <div>\r\n\r\n\r\n                        <FormUserDetail/>\r\n\r\n                    <Grid container className={classes.root}>\r\n                        <Grid item className={classes.leftNRightGrid} xs={1}>\r\n                            <h2  >sdfsdfsdf</h2>\r\n                        </Grid>\r\n                        <Grid item xs={10} className={classes.centerGrid}>\r\n                            <SearchBar onChange={(value)=>this.updateSearchWord(value)}/>\r\n                            <TestNewTable searchword={this.state.searchWord} data={this.state.data}/>\r\n                        </Grid>\r\n\r\n                        <Grid item className={classes.leftNRightGrid} xs={1}>\r\n                            <h2>sdfsdfsdf</h2>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                        <Footer/>\r\n\r\n\r\n            </div>\r\n        )\r\n}\r\n}\r\n\r\nexport default withStyles(useStyles)(WelcomePage);","import React from 'react'\r\nimport PostData from '../data/data.json'\r\n\r\n\r\nvar json =  {\r\n    \"payload\": [\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"Atta\",\r\n            \"brands\": [\r\n                {\r\n                    \"id\": 118,\r\n                    \"name\": \"Wheatola\",\r\n                    \"subProducts\": [\r\n                        {\r\n                            \"id\": 858,\r\n                            \"name\": \"Chakki Aata\",\r\n                            \"minPrice\": 52,\r\n                            \"maxPrice\": 56\r\n                        },\r\n                        {\r\n                            \"id\": 2,\r\n                            \"name\": \"Chakki Atta\",\r\n                            \"minPrice\": 222,\r\n                            \"maxPrice\": 236\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"id\": 16,\r\n            \"name\": \"Rice (Branded)\",\r\n            \"brands\": [\r\n                {\r\n                    \"id\": 25,\r\n                    \"name\": \"CookStar\",\r\n                    \"subProducts\": [\r\n                        {\r\n                            \"id\": 1163,\r\n                            \"name\": \"Best Basmati\",\r\n                            \"creditDays\": 0,\r\n                            \"minPrice\": 5600,\r\n                            \"maxPrice\": 5600\r\n                        },\r\n                        {\r\n                            \"id\": 863,\r\n                            \"name\": \"Extra Long Grain Basmati\",\r\n                            \"creditDays\": 0,\r\n                            \"minPrice\": 7800,\r\n                            \"maxPrice\": 7800\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n};\r\n\r\nclass PostList extends React.Component {\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    PostData.payload.map(j =>\r\n                        <div>\r\n                            {j.name}\r\n                            {j.periodiskTilsyn.map(b =>\r\n                                <div>\r\n                                    {b.foerste.map(s =>\r\n                                        <div>\r\n                                            {s.Sprogindsatsen.map(k =>\r\n                                                <div>\r\n                                                    {k.indsats}\r\n                                                </div>)\r\n                                            }\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                    )\r\n                                    }\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default PostList;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Grid from './BackgroungGrid';\nimport UserForm from \"./components/UserForm\";\nimport FormUserDetail from \"./components/Header/FormUserDetail\";\nimport Footer from \"./components/Footer/Footer\";\nimport WelcomePage from \"./components/WelcomeSection/WelcomePage\";\nimport PostList from \"./Post/PostList\";\n\n\nvar data = [{\"name\": \"Baked Salmon\",\"ingredients\":[{\"name\": \"Salmon\", \"amount\": 1, \"measurement\": \"l lb\" },{ \"name\": \"Pine Nuts\", \"amount\": 1, \"measurement\": \"cup\" },{ \"name\": \"Butter Lettuce\", \"amount\": 2, \"measurement\": \"cups\" },{ \"name\": \"Yellow Squash\", \"amount\": 1, \"measurement\": \"med\" },{ \"name\": \"Olive Oil\", \"amount\": 0.5, \"measurement\": \"cup\" },{ \"name\": \"Garlic\", \"amount\": 3, \"measurement\": \"cloves\" }    ],    \"steps\": [\"Preheat the oven to 350 degrees.\",\"Spread the olive oil around a glass baking dish.\",\"Add the salmon, garlic, and pine nuts to the dish.\",\"Bake for 15 minutes.\",\"Add the yellow squash and put back in the oven for 30 mins.\",\"Remove from oven and let cool for 15 minutes. Add the lettuce and serve.\"    ]\n},{\"name\": \"Fish Tacos\",    \"ingredients\":[{ \"name\": \"Whitefish\", \"amount\": 1, \"measurement\": \"l lb\" },{ \"name\": \"Cheese\", \"amount\": 1, \"measurement\": \"cup\" },{ \"name\": \"Iceberg Lettuce\", \"amount\": 2, \"measurement\": \"cups\" },{ \"name\": \"Tomatoes\", \"amount\": 2, \"measurement\": \"large\"},{ \"name\": \"Tortillas\", \"amount\": 3, \"measurement\": \"med\" }    ],    \"steps\":[\"Cook the fish on the grill until hot.\",\"Place the fish on the 3 tortillas.\",\"Top them with lettuce, tomatoes, and cheese.\"    ]}];\n\n\nconst Menu = (props)=>\n    <article>\n        <header>\n            <h1>{props.title}</h1>\n        </header>\n        <div className=\"recipe\">\n            {props.recipe.map((recipe,i)=>\n            <Recipe key={i} name={recipe.name} ingredients={recipe.ingredients} steps={recipe.steps} />\n            )}\n        </div>\n\n    </article>\n\n\n\nconst Recipe =({name,ingredients,steps})=>\n    <section id={name.toLowerCase().replace(/ /g,\"-\")}>\n        <h1>{}name</h1>\n        <ul className=\"ingredients\">\n            {ingredients.map((ingredient,i)=>\n                <li key={i}>{ingredient.name}</li>\n            )}\n        </ul>\n        <section className=\"instructions\">\n            <h2>Cooking Instructions</h2>\n            {steps.map((step,i)=>\n                <p key={i}>{step}</p>\n            )}\n\n        </section>\n    </section>\n\nvar item = [\"1 lb salomon\",\n\"1 cu pine Nuts\",\n\"2 cups butter Letture\"];\n\n\nconst IngredientsList = props =>\n    React.createElement(\"ul\", {className: \"ingredients\"},\n    props.item.map((ingredient, i) =>\n        React.createElement(\"li\", { key: i }, ingredient)\n    )\n)\n\n\nclass Ing extends React.Component{\n    renderListItem(ingedient,i){\n        return React.createElement(\"li\",{key:i},ingedient)\n    }\n\n    render(){\n        return React.createElement(\"ul\",{className:\"ingredients\"},\n            this.props.item.map(this.renderListItem))\n    }\n}\n\n\nReactDOM.render(\n <React.StrictMode>\n    <WelcomePage/>\n  </React.StrictMode>,\n\n  document.getElementById('root')\n\n\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}